.rombankmap
    bankstotal 2
    banksize $10
    banks 1 ; dummy bank for iNES header
    banksize $8000
    banks 1
.endro

.memorymap
    defaultslot 1
    slot 0 $0000 size $10   ; dummy slot for iNES header
    slot 1 $8000 size $8000
.endme

.bank 0 slot 0
; iNES header - NROM with 32k PRG and no CHR
.db "NES", $1A, $02, $00, $00, $00
.db 0,0,0,0,0,0,0,0

.bank 1 slot 1
.orga $8000


.define nmicounter $10
.enum $20
    joypad          db
    prevJoypad      db
    joypadInv       db
    prevJoypadInv   db
.ende

reset:
    sei
    ldx #$FF
    txs
    inx
    txa
    sta nmicounter
    jsr nesmus.initEngine
    jsr waitForVblank
    jsr waitForVblank
    jsr waitForVblank
    lda #>music.0.pulse1
    ldy #<music.0.pulse1
    ldx #0
    jsr playStream
    lda #>music.0.pulse2
    ldy #<music.0.pulse2
    ldx #1
    jsr playStream
    lda #>music.0.triangle
    ldy #<music.0.triangle
    ldx #2
    jsr playStream
    lda #>music.0.drum
    ldy #<music.0.drum
    ldx #3
    jsr playStream
@loop:
    jsr waitForNMI
    jsr fetchJoypad
    ldx #1
    jsr readJoypad
    lda prevJoypadInv
    and joypad
    and #$80    ; check A button pressed
    beq +
    lda #>sfx0
    ldy #<sfx0
    ldx #4
    jsr playStream
+   jmp @loop
   
waitForVblank:
    bit $2002
-   bit $2002
    bpl -
    rts
    
waitForNMI:
    lda nmicounter
    cmp $2002
    ldx #$80
    stx $2000
-   cmp nmicounter
    beq -
    rts
    
fetchJoypad:
    ldy #1
    sty $4016
    dey
    sty $4016
    rts
    
readJoypad:
    lda joypad
    sta prevJoypad
    eor #$FF
    sta prevJoypadInv
    ldy #8
-   lda $4016
    lsr
    rol joypad
    dey
    bne -
    lda joypad
    eor #$FF
    sta joypadInv
    rts
    
playStream:
    sta nesmus.notePtrH.w, x
    tya
    sta nesmus.notePtrL.w, x
    jsr nesmus.stopStream
    jmp nesmus.startStream
    
nmi:
    inc nmicounter
    pha
    txa
    pha
    tya
    pha
    lda #0
    sta $2000
    jsr nesmus.updateEngine
    pla
    tay
    pla
    tax
    pla
    rti

nesmus.envelopeTable:
    .dw envelope.0
    .dw envelope.1
    .dw envelope.2
    .dw envelope.3
    .dw envelope.4
    .dw envelope.5
    .dw envelope.6
    
envelope.0: .db $0F,$FF
envelope.1: .db $4F,$FF
envelope.2: .db $8F,$FF
envelope.3: .db $CF,$FF
envelope.4: .db $48,$48,$46,$45,$44,$FF,$41,$FF
envelope.5: .db $89,$86,$85,$83,$82,$81,$FF
envelope.6: .db $49,$48,$47,$46,$46,$45,$45,$43,$FF,$41,$FF

nesmus.envReleaseOffsTable:  
    .db $01, $01, $01, $01, $06, $05, $09

nesmus.drumTable:
    .dw drum.0
    .dw drum.1
    .dw drum.2
    
sfx0:
    .db $B2, $82, $25, $B1, $28, $2C, $30, $40, $84, $20, $25, $28, $30, $FF
    
drum.0:
    .db $61, $1C, $59, $C7, $E5, $F4, $F3, $23, $F2, $F1, $02
drum.1:
    .db $41, $C6, $D4, $D2, $E1, $02
drum.2:
    .db $41, $36, $34, $22, $21, $02
    
nesmus.drumReleaseOffsTable:
    .db $0A
    
music.0.pulse2:
    .db $A7, $F4, $08
music.0.pulse1:
    .db $CC, $B6, $86, $25, $81, $28, $2a, $94, $2c, $2d, $2c, $2a, $28
    .db $
    .db $F7
    .dw music.0.pulse1
music.0.triangle:
    .db $C1, $84, $F2, $08, $19, $58, $19, $52, $19, $52, $F3
    .db $F7
    .dw music.0.triangle
music.0.drum:
    .db $C6, $81, $F2, $8, $02, $51, $01, $01, $00, $51, $01, $01, $F3
    .db $F7
    .dw music.0.drum
    
.orga $FFFA
.section "vectors" size 6 force
    .dw nmi
    .dw reset
    .dw reset
.ends